ahead: Record<string, ({x,y}: Point) => Point> := 
  N: ({x, y}) => ({x, y: y - 1})
  E: ({x, y}) => ({x: x + 1, y})
  S: ({x, y}) => ({x, y: y + 1})
  W: ({x, y}) => ({x: x - 1, y})


grid := getArray2d input |> .map &.map toNumber

trailheads: Point[] := []
loop2d grid, (x, y, _) =>
  if getGridPoint(grid, {x, y}) is 0
    trailheads.push({x, y})

paths := new Set<string>()

function walk(step: Point, start?: Point): number {
  value := getGridPoint grid, step

  if value is 9
    if start
      paths.add(`${start.x}, ${start.y} - ${step.x}, ${step.y}`)
    else 
      return 1

  next := value + 1
  nP := ahead.N step
  nV := getGridPoint(grid, nP)
  eP := ahead.E step
  eV := getGridPoint(grid, eP)
  sP := ahead.S step
  sV := getGridPoint(grid, sP)
  wP := ahead.W step
  wV := getGridPoint(grid, wP)

  (nV is next ? walk nP, start : 0) +
  (eV is next ? walk eP, start : 0) +
  (sV is next ? walk sP, start : 0) +
  (wV is next ? walk wP, start : 0)
}

sum .= 0
for trailhead of trailheads
  walk trailhead, trailhead
  sum += walk trailhead

log paths.size
log sum