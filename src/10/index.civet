grid := getArray2d input |> .map &.map toNumber

ahead: Record<string, ({x,y}: Point) => Point> := 
  N: ({x, y}) => ({x, y: y - 1})
  E: ({x, y}) => ({x: x + 1, y})
  S: ({x, y}) => ({x, y: y + 1})
  W: ({x, y}) => ({x: x - 1, y})

paths := new Set()
trailheads: Point[] := []
loop2d grid, (p, _) => trailheads.push(p) if getGridPoint(grid, p) is 0

function walk(step: Point, start?: Point): number {
  value := getGridPoint grid, step

  if value is 9
    paths.add(`${start.x}, ${start.y} - ${step.x}, ${step.y}`) if start
    return 1

  next := value + 1
  nP := ahead.N step
  eP := ahead.E step
  sP := ahead.S step
  wP := ahead.W step

  (getGridPoint(grid, nP) is next ? walk nP, start : 0) +
  (getGridPoint(grid, eP) is next ? walk eP, start : 0) +
  (getGridPoint(grid, sP) is next ? walk sP, start : 0) +
  (getGridPoint(grid, wP) is next ? walk wP, start : 0)
}

p2 := for sum trailhead of trailheads
  walk trailhead, trailhead

log paths.size
log p2