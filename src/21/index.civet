keys := new Grid "789\n456\n123\nX0A"
arrows := new Grid "X^A\n<v>"
keydown := memo (code: string, robots: number, pad) =>
  if robots is 0 
    return code#
  curr .= pad.find "A"
  count .= 0
  for button of code
    to := pad.find(button)!
    queue := [{ p: curr, push: "" }]
    min .= Infinity
    while queue#
      //@ts-ignore
      { p, push } := queue.shift()
      if (isEqual p, pad.find "X") continue
      if (isEqual p, to)
        min = Math.min min, keydown `${push}A`, robots - 1, arrows
      if (to.x > p.x) queue.push { p: {...p, x: p.x + 1}, push: `${push}>` }
      if (to.x < p.x) queue.push { p: {...p, x: p.x - 1}, push: `${push}<` }
      if (to.y > p.y) queue.push { p: {...p, y: p.y + 1}, push: `${push}v` }
      if (to.y < p.y) queue.push { p: {...p, y: p.y - 1}, push: `${push}^` }
    count += min
    curr = to
  count
// +1 since first run is human made
log for sum code of getLines input 
  int(code) * keydown code, 2 + 1, keys
log for sum code of getLines input 
  int(code) * keydown code, 25 + 1, keys
